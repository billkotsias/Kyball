#include "StdAfx.h"
/*
-----------------------------------------------------------------------------
Filename:    P3D.cpp
-----------------------------------------------------------------------------

This source file is generated by the Ogre AppWizard.

Check out: http://conglomerate.berlios.de/wiki/doku.php?id=ogrewizards

Based on the Example Framework for OGRE
(Object-oriented Graphics Rendering Engine)

Copyright (c) 2000-2007 The OGRE Team
For the latest info, see http://www.ogre3d.org/

You may use this sample code for anything you like, it is not covered by the
LGPL like the rest of the OGRE engine.
-----------------------------------------------------------------------------
*/

#include "P3D.h"

#include "P3DConfig.h"
#include "P3DApp.h"
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
	#define WIN32_LEAN_AND_MEAN
	#include "windows.h"
#endif
#include "OgreException.h"

/// console-window related headers
//#ifdef _DEBUG
#include <stdio.h>
#include <io.h>
#include <fcntl.h>
//#endif

#ifdef __cplusplus
extern "C" {
#endif


	void openConsoleWindow() {
#ifdef _DEBUG /// console window opens only in debug mode
		AllocConsole();

		HANDLE handle_out = GetStdHandle(STD_OUTPUT_HANDLE);
		int hCrt = _open_osfhandle((long) handle_out, _O_TEXT);
		FILE* hf_out = _fdopen(hCrt, "w");
		setvbuf(hf_out, NULL, _IONBF, 1);
		*stdout = *hf_out;

		HANDLE handle_in = GetStdHandle(STD_INPUT_HANDLE);
		hCrt = _open_osfhandle((long) handle_in, _O_TEXT);
		FILE* hf_in = _fdopen(hCrt, "r");
		setvbuf(hf_in, NULL, _IONBF, 128);
		*stdin = *hf_in;

		HWND hwndMyWnd = GetConsoleWindow();
		//SetWindowPos(hwndMyWnd, HWND_TOPMOST, 0, 0, 0, 0, SWP_DRAWFRAME | SWP_NOMOVE | SWP_NOSIZE | SWP_SHOWWINDOW); // ALWAYS ON TOP
#endif
	}

#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
	INT WINAPI WinMain( HINSTANCE hInst, HINSTANCE, LPSTR strCmdLine, INT )
#else
	int main(int argc, char *argv[])
#endif
	{
	// USEFUL STUFF TO CONSIDER, MAY COME ACROSS IN THE FUTURE AGAIN 5/7/09
	// - get exe full path
	///STARTUPINFO StartupInfo;
	///StartupInfo.dwFlags = 0;
	///GetStartupInfo( &StartupInfo );
	///char path[255] = StartupInfo.lpTitle;
	// - get/set current working directory
	///char path[255];GetCurrentDirectory(255, path);
	///SetCurrentDirectory(path);

	try {

		openConsoleWindow();

		bool quitImmediately;
		{
			P3D::P3DConfig p3dConfig;
			quitImmediately = p3dConfig.begin();
		}

		if (!quitImmediately) {
			P3D::P3DApp p3dapp;
			p3dapp.begin();
		}

	} catch( Ogre::Exception& e ) {

#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
		MessageBox( NULL, e.getFullDescription().c_str(), "An exception has occured!", MB_OK | MB_ICONERROR | MB_TASKMODAL);
#else
		std::cerr << "An exception has occured: " << e.getFullDescription().c_str() << std::endl;
#endif
      }

      return 0;
   }

#ifdef __cplusplus
}
#endif
